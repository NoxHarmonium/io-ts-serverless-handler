# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  issues: write
  packages: write
  statuses: write

on:
  push:
    branches: ["**"]
  pull_request_target:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    # Don't build if Semantic Release pushes a ci skip commit
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      CC_SECRET: ${{ secrets.CC_SECRET }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
        with:
          # Prevents interference with release credentials
          # See https://github.com/semantic-release/semantic-release/blob/master/docs/recipes/github-actions.md#pushing-packagejson-changes-to-a-master-branch
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - name: Install dependencies
        run: yarn install
      - name: Build packages
        run: yarn workspaces run build
      - name: Check for code quality in packages
        run: yarn workspaces run quality-check
        env:
          CI: true
      - name: Check commit history with commitlint
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          export FROM=$(git rev-parse origin/master)
          echo "Checking from commit [$FROM] to [$GITHUB_SHA]..."
          yarn commitlint --from "${FROM}" --to "${GITHUB_SHA}" --verbose
        if: github.event_name != 'pull_request'
      # Coveralls doesn't like it when you gernerate coverage in a subpackage of a mono repo
      # Thanks: https://github.com/coverallsapp/github-action/issues/17#issuecomment-552218079
      - name: Fix coverage for Coveralls
        run: sed -i -E "s/^SF:(.+)$/SF:packages\/io-ts-serverless-handler\/\1/" coverage/lcov.info
        working-directory: ./packages/io-ts-serverless-handler
      - name: Coveralls
        uses: coverallsapp/github-action@v1.0.1
        with:
          # Not the same as GH_TOKEN
          # See: https://help.github.com/en/actions/configuring-and-managing-workflows/authenticating-with-the-github_token
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./packages/io-ts-serverless-handler/coverage/lcov.info
      - name: Run Semantic Release
        run: yarn semantic-release
        working-directory: ./packages/io-ts-serverless-handler
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        if: github.ref == 'refs/heads/master'
      - name: Run Integration Test
        run: yarn integration-test
        working-directory: ./packages/io-ts-serverless-handler-example
        if: github.ref == 'refs/heads/master'
