# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      CC_SECRET: ${{ secrets.CC_SECRET }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - name: Install dependencies
        run: yarn install
      - name: Build packages
        run: yarn workspaces run build
      - name: Check for code quality in packages
        run: yarn workspaces run quality-check
        env:
          CI: true
      - name: Check commit history with commitlint
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          export FROM=$(git rev-parse origin/master)
          echo "Checking from commit [$FROM] to [$GITHUB_SHA]..."
          yarn commitlint --from "${FROM}" --to "${GITHUB_SHA}" --verbose
        if: github.event_name != 'pull_request'
      - name: Run Codechecks
        run: yarn codechecks
        working-directory: ./packages/io-ts-serverless-handler
        if: github.event_name != 'pull_request'
      - name: Analyse Coverage
        run: bash <(curl -s https://codecov.io/bash)
        working-directory: ./packages/io-ts-serverless-handler
      - name: Run Semantic Release
        run: yarn semantic-release
        working-directory: ./packages/io-ts-serverless-handler
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Run Integration Test
        run: yarn integration-test
        working-directory: ./packages/io-ts-serverless-handler-example
